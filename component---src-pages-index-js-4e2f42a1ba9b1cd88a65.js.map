{"version":3,"sources":["webpack:///./src/styles/homeStyles.js","webpack:///./src/components/homePage/HomeBanner.js","webpack:///./src/hooks/useWindowSize.js","webpack:///./src/pages/index.js"],"names":["Banner","styled","div","props","theme","background","Video","Canvas","canvas","BannerTitle","motion","h1","text","Headline","span","HomeBanner","changeCursorType","windowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useState","setWindowSize","useEffect","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","useWindowSize","currentTheme","useGlobalStateContext","useRef","videoRef","lastX","lastY","renderingElement","current","drawingElement","cloneNode","drawingCtx","getContext","renderingCtx","style","opacity","moving","globalCompositeOperation","fillStyle","fillRect","ev","pageX","offsetLeft","pageY","offsetTop","currentX","currentY","lineJoin","moveTo","lineTo","closePath","lineWidth","stroke","drawImage","item","initial","y","animate","transition","duration","ease","ref","src","require","loop","autoPlay","onMouseEnter","onMouseLeave","variants","staggerChildren","IndexPage","dispatch","useGlobalDispatchContext","cursorStyles","cursorType","includes","type"],"mappings":"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","file":"component---src-pages-index-js-4e2f42a1ba9b1cd88a65.js","sourcesContent":["import styled from \"styled-components\"\nimport { motion } from \"framer-motion\"\n\nexport const Banner = styled.div`\n  background: ${props => props.theme.background};\n  height: 100vh;\n  width: 100%;\n  position: relative;\n  margin-bottom: 296px;\n`\n\nexport const Video = styled.div`\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n\n  video {\n    object-fit: cover;\n  }\n`\n\nexport const Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  display: block;\n`\n\nexport const BannerTitle = styled(motion.h1)`\n  position: absolute;\n  bottom: -120px;\n  left: -18px;\n  color: ${props => props.theme.text};\n  pointer-events: none;\n`\n\nexport const Headline = styled(motion.span)`\n  display: block;\n  font-size: 23rem;\n  font-weight: 900;\n  line-height: 0.76;\n`\n","import React, { useRef, useEffect } from \"react\"\n\n// Global context\nimport { useGlobalStateContext } from \"../../context/globalContext\"\n\n// Custom hooks\nimport useWindowSize from \"../../hooks/useWindowSize\"\n\n// Styled components\nimport {\n  Banner,\n  Video,\n  Canvas,\n  BannerTitle,\n  Headline,\n} from \"../../styles/homeStyles\"\n\nconst HomeBanner = ({ changeCursorType }) => {\n  const windowSize = useWindowSize()\n  const { currentTheme } = useGlobalStateContext()\n  let canvas = useRef(null)\n  let videoRef = useRef(null)\n\n  useEffect(() => {\n    let renderingElement = canvas.current\n    // create an offscreen canvas only for the drawings\n    let drawingElement = renderingElement.cloneNode()\n    let drawingCtx = drawingElement.getContext(\"2d\")\n    let renderingCtx = renderingElement.getContext(\"2d\")\n    renderingCtx.canvas.width = windowSize.width\n    renderingCtx.canvas.height = windowSize.height\n    drawingCtx.canvas.width = windowSize.width\n    drawingCtx.canvas.height = windowSize.height\n    videoRef.current.style.opacity = \"1\"\n\n    let lastX\n    let lastY\n    let moving = false\n\n    renderingCtx.globalCompositeOperation = \"source-over\"\n    renderingCtx.fillStyle = currentTheme === \"dark\" ? \"#000000\" : \"#ffffff\"\n    renderingCtx.fillRect(0, 0, windowSize.width, windowSize.height)\n    renderingElement.addEventListener(\"mouseover\", ev => {\n      moving = true\n      lastX = ev.pageX - renderingElement.offsetLeft\n      lastY = ev.pageY - renderingElement.offsetTop\n    })\n\n    renderingElement.addEventListener(\"click\", ev => {\n      moving = true\n      lastX = ev.pageX - renderingElement.offsetLeft\n      lastY = ev.pageY - renderingElement.offsetTop\n    })\n\n    renderingElement.addEventListener(\"mouseup\", ev => {\n      moving = false\n      lastX = ev.pageX - renderingElement.offsetLeft\n      lastY = ev.pageY - renderingElement.offsetTop\n    })\n\n    renderingElement.addEventListener(\"mousemove\", ev => {\n      if (moving) {\n        drawingCtx.globalCompositeOperation = \"source-over\"\n        renderingCtx.globalCompositeOperation = \"destination-out\"\n        let currentX = ev.pageX - renderingElement.offsetLeft\n        let currentY = ev.pageY - renderingElement.offsetTop\n        drawingCtx.lineJoin = \"round\"\n        drawingCtx.moveTo(lastX, lastY)\n        drawingCtx.lineTo(currentX, currentY)\n        drawingCtx.closePath()\n        drawingCtx.lineWidth = 120\n        drawingCtx.stroke()\n        lastX = currentX\n        lastY = currentY\n        renderingCtx.drawImage(drawingElement, 0, 0)\n      }\n    })\n  }, [currentTheme, windowSize])\n\n  const container = {\n    initial: { y: 800 },\n    animate: {\n      y: 0,\n      transition: {\n        staggerChildren: 0.2,\n      },\n    },\n  }\n  const item = {\n    initial: { y: 800 },\n    animate: {\n      y: 0,\n      transition: {\n        duration: 1,\n        ease: [0.6, 0.05, -0.01, 0.9],\n      },\n    },\n  }\n\n  return (\n    <Banner>\n      <Video ref={videoRef}>\n        <video\n          src={require(\"../../assets/video/video.mp4\")}\n          width=\"100%\"\n          height=\"100%\"\n          loop\n          autoPlay\n        ></video>\n      </Video>\n      <Canvas\n        ref={canvas}\n        // width={1440}\n        // height={702}\n        onMouseEnter={() => changeCursorType(\"hovered\")}\n        onMouseLeave={changeCursorType}\n      />\n      <BannerTitle variants={container} initial=\"initial\" animate=\"animate\">\n        <Headline variants={item}>DIG</Headline>\n        <Headline variants={item}>DEEP</Headline>\n      </BannerTitle>\n    </Banner>\n  )\n}\n\nexport default HomeBanner\n","import { useState, useEffect } from \"react\"\n\nexport default function useWindowSize() {\n  const isClient = typeof window === \"object\"\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize())\n\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n\n    // timeoutId for debounce mechanism\n    let timeoutId = null\n    const resizeListener = () => {\n      // prevent execution of previous setTimeout\n      clearTimeout(timeoutId)\n      // change width from the state object after 150 milliseconds\n      timeoutId = setTimeout(() => setWindowSize(getSize()), 150)\n    }\n\n    window.addEventListener(\"resize\", resizeListener)\n    return () => window.removeEventListener(\"resize\", resizeListener)\n  }, [isClient, setWindowSize]) // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize\n}\n","import React from \"react\"\n\n// Global context\nimport {\n  useGlobalStateContext,\n  useGlobalDispatchContext,\n} from \"../context/globalContext\"\n\n// Components\nimport Layout from \"../components/layout\"\nimport HomeBanner from \"../components/homePage/HomeBanner\"\n\nconst IndexPage = props => {\n  const dispatch = useGlobalDispatchContext()\n  const { cursorStyles } = useGlobalStateContext()\n  const onCursor = cursorType => {\n    cursorType = (cursorStyles.includes(cursorType) && cursorType) || false\n    dispatch({ type: \"CURSOR_TYPE\", cursorType: cursorType })\n  }\n  return (\n    <Layout>\n      <HomeBanner changeCursorType={onCursor} />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}