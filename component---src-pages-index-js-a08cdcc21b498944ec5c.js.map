{"version":3,"sources":["webpack:///./src/styles/homeStyles.js","webpack:///./src/components/homePage/HomeBanner.js","webpack:///./src/hooks/useWindowSize.js","webpack:///./src/pages/index.js"],"names":["Banner","styled","div","props","theme","background","Video","Canvas","canvas","BannerTitle","motion","h1","text","Headline","span","HomeBanner","changeCursorType","windowSize","getSize","width","window","innerWidth","height","innerHeight","useState","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","currentTheme","useGlobalStateContext","useRef","lastX","lastY","renderingElement","current","drawingElement","cloneNode","drawingCtx","getContext","renderingCtx","moving","globalCompositeOperation","fillStyle","fillRect","ev","pageX","offsetLeft","pageY","offsetTop","currentX","currentY","lineJoin","moveTo","lineTo","closePath","lineWidth","stroke","drawImage","item","initial","y","animate","transition","duration","ease","src","require","loop","autoPlay","ref","onMouseEnter","onMouseLeave","variants","staggerChildren","LazyLayout","lazy","IndexPage","dispatch","useGlobalDispatchContext","cursorStyles","isSSR","fallback","cursorType","includes","type"],"mappings":"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","file":"component---src-pages-index-js-a08cdcc21b498944ec5c.js","sourcesContent":["import styled from \"styled-components\"\nimport { motion } from \"framer-motion\"\n\nexport const Banner = styled.div`\n  background: ${props => props.theme.background};\n  height: 100vh;\n  width: 100%;\n  position: relative;\n  margin-bottom: 296px;\n`\n\nexport const Video = styled.div`\n  width: 100%;\n  height: 100%;\n\n  video {\n    object-fit: cover;\n  }\n`\n\nexport const Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  display: block;\n`\n\nexport const BannerTitle = styled(motion.h1)`\n  position: absolute;\n  bottom: -120px;\n  left: -18px;\n  color: ${props => props.theme.text};\n  pointer-events: none;\n`\n\nexport const Headline = styled(motion.span)`\n  display: block;\n  font-size: 23rem;\n  font-weight: 900;\n  line-height: 0.76;\n`\n","import React, { useRef, useEffect } from \"react\"\n\n// Global context\nimport { useGlobalStateContext } from \"../../context/globalContext\"\n\n// Custom hooks\nimport useWindowSize from \"../../hooks/useWindowSize\"\n\n// Styled components\nimport {\n  Banner,\n  Video,\n  Canvas,\n  BannerTitle,\n  Headline,\n} from \"../../styles/homeStyles\"\n\nconst HomeBanner = ({ changeCursorType }) => {\n  const windowSize = useWindowSize()\n  const { currentTheme } = useGlobalStateContext()\n  let canvas = useRef(null)\n\n  useEffect(() => {\n    let renderingElement = canvas.current\n    // create an offscreen canvas only for the drawings\n    let drawingElement = renderingElement.cloneNode()\n    let drawingCtx = drawingElement.getContext(\"2d\")\n    let renderingCtx = renderingElement.getContext(\"2d\")\n    let lastX\n    let lastY\n    let moving = false\n\n    renderingCtx.globalCompositeOperation = \"source-over\"\n    renderingCtx.fillStyle = currentTheme === \"dark\" ? \"#000000\" : \"#ffffff\"\n    renderingCtx.fillRect(0, 0, windowSize.width, windowSize.height)\n\n    renderingElement.addEventListener(\"mouseover\", ev => {\n      moving = true\n      lastX = ev.pageX - renderingElement.offsetLeft\n      lastY = ev.pageY - renderingElement.offsetTop\n    })\n\n    renderingElement.addEventListener(\"click\", ev => {\n      moving = true\n      lastX = ev.pageX - renderingElement.offsetLeft\n      lastY = ev.pageY - renderingElement.offsetTop\n    })\n\n    renderingElement.addEventListener(\"mouseup\", ev => {\n      moving = false\n      lastX = ev.pageX - renderingElement.offsetLeft\n      lastY = ev.pageY - renderingElement.offsetTop\n    })\n\n    renderingElement.addEventListener(\"mousemove\", ev => {\n      if (moving) {\n        drawingCtx.globalCompositeOperation = \"source-over\"\n        renderingCtx.globalCompositeOperation = \"destination-out\"\n        let currentX = ev.pageX - renderingElement.offsetLeft\n        let currentY = ev.pageY - renderingElement.offsetTop\n        drawingCtx.lineJoin = \"round\"\n        drawingCtx.moveTo(lastX, lastY)\n        drawingCtx.lineTo(currentX, currentY)\n        drawingCtx.closePath()\n        drawingCtx.lineWidth = 120\n        drawingCtx.stroke()\n        lastX = currentX\n        lastY = currentY\n        renderingCtx.drawImage(drawingElement, 0, 0)\n      }\n    })\n  }, [currentTheme])\n\n  const container = {\n    initial: { y: 800 },\n    animate: {\n      y: 0,\n      transition: {\n        staggerChildren: 0.2,\n      },\n    },\n  }\n  const item = {\n    initial: { y: 800 },\n    animate: {\n      y: 0,\n      transition: {\n        duration: 1,\n        ease: [0.6, 0.05, -0.01, 0.9],\n      },\n    },\n  }\n\n  return (\n    <Banner>\n      <Video>\n        <video\n          src={require(\"../../assets/video/video.mp4\")}\n          width=\"100%\"\n          height=\"100%\"\n          loop\n          autoPlay\n        ></video>\n      </Video>\n      <Canvas\n        ref={canvas}\n        width={windowSize.width}\n        height={windowSize.height}\n        onMouseEnter={() => changeCursorType(\"hovered\")}\n        onMouseLeave={changeCursorType}\n      />\n      <BannerTitle variants={container} initial=\"initial\" animate=\"animate\">\n        <Headline variants={item}>DIG</Headline>\n        <Headline variants={item}>DEEP</Headline>\n      </BannerTitle>\n    </Banner>\n  )\n}\n\nexport default HomeBanner\n","import React, { useEffect, useState } from \"react\"\n\nexport default function useWindowSize() {\n  function getSize() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    }\n  }\n  const [windowSize, setWindowSize] = useState(getSize)\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize(getSize())\n    }\n\n    window.addEventListener(\"resize\", handleResize)\n\n    return () => window.removeEventListener(\"resize\", handleResize)\n  }, [])\n\n  return windowSize\n}\n","import React, { Suspense, lazy } from \"react\"\n\n// Global context\nimport {\n  useGlobalStateContext,\n  useGlobalDispatchContext,\n} from \"../context/globalContext\"\n\n// import Layout from \"../components/layout\"\nimport HomeBanner from \"../components/homePage/HomeBanner\"\n\nconst LazyLayout = lazy(() => import(\"../components/layout\"))\n\nconst IndexPage = props => {\n  const dispatch = useGlobalDispatchContext()\n  const { cursorStyles } = useGlobalStateContext()\n  const onCursor = cursorType => {\n    cursorType = (cursorStyles.includes(cursorType) && cursorType) || false\n    dispatch({ type: \"CURSOR_TYPE\", cursorType: cursorType })\n  }\n  const isSSR = typeof window === \"undefined\"\n  return (\n    <>\n      {!isSSR && (\n        <Suspense fallback=\"Loading...\">\n          <LazyLayout>\n            <HomeBanner changeCursorType={onCursor} />\n          </LazyLayout>\n        </Suspense>\n      )}\n    </>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}